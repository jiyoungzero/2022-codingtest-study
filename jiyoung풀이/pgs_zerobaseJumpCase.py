# 당신은 직선 위의 0 지점에 서있습니다.

# 그리고 당신은 같은 직선 위의 n미터 떨어진 목적지로 가려고 합니다.

# 당신은 한 번에 수직선 위를 k 이하의 정수 거리만큼 이동할 수 있으며, 처음 이동한 방향으로만 계속 이동할 수 있습니다.

# 그리고 직전에 이동한 거리와 같은 거리만큼 연속으로 다시 이동할 수는 없습니다.

# 예를 들어, 3-2-3 순서대로 이동했다면 다음에 3만큼 이동할 수 없습니다.

# 목적지까지의 거리 n과 이동 가능한 최대 거리 k가 주어질 때, 목적지에 도착 가능한 방법의 경우의 수를 출력하는 프로그램을 구현하세요.

# 결과 값이 매우 클 수 있으니, 1,000,000,007로 나눈 나머지 값을 반환하세요.

def solution(n, k):
    MOD = 1000000007
    
    dp = [[0]*(k+1) for _ in range(n+1)]
    dp[0][0] = 1
    
    for i in range(1, n+1):
        for j in range(1, min(i+1,k+1)): # 현재 가려는 수
            dp[i][j] = 0
            for z in range(k+1): # 직전 수
                if z != j:
                    dp[i][j] += dp[i-j][z] # dp[현재까지 움직인 거리][직전에 jump한 값]
                    dp[i][j] %= MOD
                    
    answer = 0
    for i in range(k+1):
        answer += dp[n][i]
        answer %= MOD

    print(dp,answer)

solution(5,3)